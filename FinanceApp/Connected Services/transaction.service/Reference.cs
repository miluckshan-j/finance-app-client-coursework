//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinanceApp.transaction.service {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="transaction.service.TransactionServiceSoap")]
    public interface TransactionServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertTransaction(string type, double amount, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertTransactionAsync(string type, double amount, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateTransaction(int id, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateTransactionAsync(int id, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable RetrieveTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteTransaction(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteTransactionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveWeeklySummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable RetrieveWeeklySummary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveWeeklySummary", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveWeeklySummaryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TransactionServiceSoapChannel : FinanceApp.transaction.service.TransactionServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionServiceSoapClient : System.ServiceModel.ClientBase<FinanceApp.transaction.service.TransactionServiceSoap>, FinanceApp.transaction.service.TransactionServiceSoap {
        
        public TransactionServiceSoapClient() {
        }
        
        public TransactionServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertTransaction(string type, double amount, string date) {
            return base.Channel.InsertTransaction(type, amount, date);
        }
        
        public System.Threading.Tasks.Task<bool> InsertTransactionAsync(string type, double amount, string date) {
            return base.Channel.InsertTransactionAsync(type, amount, date);
        }
        
        public bool UpdateTransaction(int id, double amount) {
            return base.Channel.UpdateTransaction(id, amount);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTransactionAsync(int id, double amount) {
            return base.Channel.UpdateTransactionAsync(id, amount);
        }
        
        public System.Data.DataTable RetrieveTransactions() {
            return base.Channel.RetrieveTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveTransactionsAsync() {
            return base.Channel.RetrieveTransactionsAsync();
        }
        
        public bool DeleteTransaction(int id) {
            return base.Channel.DeleteTransaction(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTransactionAsync(int id) {
            return base.Channel.DeleteTransactionAsync(id);
        }
        
        public System.Data.DataTable RetrieveWeeklySummary() {
            return base.Channel.RetrieveWeeklySummary();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveWeeklySummaryAsync() {
            return base.Channel.RetrieveWeeklySummaryAsync();
        }
    }
}
